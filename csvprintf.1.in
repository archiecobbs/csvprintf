.\"  -*- nroff -*-
.\"
.\" csvprintf - Simple CSV file parser for the UNIX command line
.\"
.\" Copyright 2010 Archie L. Cobbs <archie.cobbs@gmail.com>
.\"
.\" Licensed under the Apache License, Version 2.0 (the "License"); you may
.\" not use this file except in compliance with the License. You may obtain
.\" a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
.\"
.\" Unless required by applicable law or agreed to in writing, software
.\" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
.\" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
.\" License for the specific language governing permissions and limitations
.\" under the License.
.\"
.Dd November 30, 2010
.Dt CSVPRINTF 1
.Os
.Sh NAME
.Nm csvprintf
.Nd CSV file parser
.Sh SYNOPSIS
.Nm csvprintf
.Bk -words
.Op Ar options
.Ar format
.Ek
.Pp
.Nm csvprintf
.Bk -words
.Fl j
.Op Ar options
.Ek
.Pp
.Nm csvprintf
.Bk -words
.Fl x
.Op Ar options
.Ek
.Pp
.Nm csvprintf
.Bk -words
.Fl X
.Op Ar options
.Ek
.Pp
.Nm xml2csv
.Bk -words
.Op Ar file.xml
.Ek
.Sh DESCRIPTION
.Nm
is a simple UNIX command line utility for parsing CSV files.
.Pp
In the first form,
.Nm
works like the
.Xr printf 1
command line utility: you supply a
.Xr printf 1
format string on the command line, and each row of the CSV file is split into arguments and formatted accordingly.
.Pp
The format specifiers in the format string contain numeric or symbolic column accessors to specify which CSV column to format.
.Pp
A numeric column accessor is a sequence of decimal digits followed by the
.Pa $
character (the same accessor format supported by
.Xr printf 1 ) .
So for example,
.Pa \(dq%3$d\(dq
would format the third CSV column as a decimal value.
In addition, the
.Pa \(dq%0$d\(dq
specifier will print the number of columns in the record.
.Pp
When the
.Fl i
flag is given, the first row is assumed to contain column names and is not output.
This allows symbolic, instead of numeric, column accessors to be used.
A symbolic column accessor is the column name enclosed in curly braces.
.Pp
For example, if the first row is
.Pa FirstName,Lastname,IdNum
then the format string
.Pa \(dq%{IdNum}04d: %{LastName}s, %{FirstName}s\(dq
would be equivalent to the format string
.Pa \(dq%3$04d: %2$s, %1$s\(dq .
.Pp
Specifying a column name that does not appear in the first row generates an error,
so the use of symbolic column accessors adds an extra consistency check.
.Sh XML Mode
With
.Fl x
or
.Fl X ,
the entire file is converted into an XML document.
.Pp
The document element is
.Ar "<csv>" .
Each CSV row becomes a
.Ar "<row>"
element containing its individual column values as sub-elements.
.Pp
With
.Fl x ,
the sub-elements are
.Ar "<col1>" ,
.Ar "<col2>" ,
etc.
.Pp
With
.Fl X
the sub-elements use the column names read from the first row (with illegal characters replaced by underscores).
.Pp
In XML mode, a character encoding must be assumed; see
.Fl e .
.Pp
The
.Nm xml2csv
command can convert XML documents generated by
.Nm
back into CSV files.
.Sh JSON Mode
With
.Fl j ,
each row is converted into a JSON document.
.Pp
This form is described by RFC 7464 and consists of concatenated JSON documents,
each framed by ASCII RS and LF control characters.
This output is compatible with the
.Xr jq 1
utility's
.Fl \-seq
flag.
.Pp
Without
.Fl i ,
each row is written as a string array.
With
.Fl i ,
each row is written as an object, with a field for each column name.
An error occurs if two CSV columns have the same name.
.Pp
In JSON mode, a character encoding must be assumed; see
.Fl e .
.Sh Input Encoding
In all modes, lines must be terminated by LF bytes or CR+LF byte pairs, and the separator and quote characters must be recognizable as single byte values.
.Pp
Otherwise, column values are copied from input to output without interpretation.
This behavior is compatible with ASCII, ISO-8859-1, UTF-8, etc., but not multi-byte encodings such as UTF-16, which must be re-encoded first.
.Pp
In XML and JSON modes, column values must be interpreted according to an assumed character encoding.
This encoding defaults to ISO-8859-1 but can be changed with the
.Fl e
flag.
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl e
Specify input character encoding for XML or JSON mode.
.Pp
By default, ISO-8859-1 is assumed.
.It Fl f
Read CSV input from the specified file.
.Pp
By default (or if ``-'' is specified),
.Nm
reads from standard input.
.It Fl i
Assume the first CSV record contains column names.
Enable symbolic column accessors and omit that first record from the output.
.It Fl j
Convert the CSV input into a JavaScript Object Notation (JSON) text sequence document.
.It Fl q
Specify an alternate CSV column quote character.
The usual backslash escape sequences are accepted.
The default quote character is double quote.
.It Fl s
Specify an alternate CSV column separator character.
The usual backslash escape sequences are accepted.
The default separator character is comma.
.It Fl h
Output usage message and exit.
.It Fl v
Output version information and exit.
.It Fl x
Convert the CSV input into an XML document.
.It Fl X
Same as
.Fl x ,
but it also causes the values in the first row to be used as the XML tag names for the corresponding columns.
.Pp
This flag implies
.Fl i .
.El
.Sh CSV FORMAT
.Nm
parses according to the format described by ``The Comma Separated Value (CSV) File Format'' (see below).
In particular, quote characters must be escaped with an extra quote and whitespace surrounding column values is ignored.
.Sh EXIT STATUS
.Nm
will exit with a status 1 if invalid CSV input is detected.
Otherwise, if an invocation of
.Xr printf 1
fails, processing stops and that exit value is returned.
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa @pkgdatadir@/csv.xsl
XSL transform that converts XML back into CSV format.
.El
.Sh BUGS
.Pp
Under the hood,
.Nm
invokes the
.Xr printf 1
executable on each CSV row it parses, which makes it relatively slow.
.Sh SEE ALSO
.Xr printf 1 ,
.Xr printf 3 ,
.Xr jq 1 .
.Rs
.%T "csvprintf: Simple CSV file parser for the UNIX command line"
.%O https://github.com/archiecobbs/csvprintf
.Re
.Rs
.%T "The Comma Separated Value (CSV) File Format"
.%O http://www.creativyst.com/Doc/Articles/CSV/CSV01.htm
.Re
.Rs
.%T "RFC 7464: JavaScript Object Notation (JSON) Text Sequences"
.%O https://datatracker.ietf.org/doc/html/rfc7464
.Re
.Sh AUTHOR
.An Archie L. Cobbs Aq archie.cobbs@gmail.com
