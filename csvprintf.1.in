.\"  -*- nroff -*-
.\"
.\" csvprintf - Simple CSV file parser for the UNIX command line
.\"
.\" Copyright 2010 Archie L. Cobbs <archie.cobbs@gmail.com>
.\"
.\" Licensed under the Apache License, Version 2.0 (the "License"); you may
.\" not use this file except in compliance with the License. You may obtain
.\" a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
.\"
.\" Unless required by applicable law or agreed to in writing, software
.\" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
.\" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
.\" License for the specific language governing permissions and limitations
.\" under the License.
.\"
.Dd November 30, 2010
.Dt CSVPRINTF 1
.Os
.Sh NAME
.Nm csvprintf
.Nd CSV file parser
.Sh SYNOPSIS
.Nm csvprintf
.Bk -words
.Op Fl i
.Op Fl q Ar char
.Op Fl s Ar char
.Op Fl f Ar file
.Ar format
.Ek
.Pp
.Nm csvprintf
.Bk -words
.Fl x
.Op Fl i
.Op Fl q Ar char
.Op Fl s Ar char
.Op Fl f Ar file
.Op Fl e Ar enc
.Ek
.Pp
.Nm csvprintf
.Bk -words
.Fl X
.Op Fl q Ar char
.Op Fl s Ar char
.Op Fl f Ar file
.Op Fl e Ar enc
.Ek
.Pp
.Nm xml2csv
.Bk -words
.Op Ar file.xml
.Ek
.Sh DESCRIPTION
.Nm
is a simple UNIX command line utility for parsing CSV files.
.Pp
.Nm
works like the
.Xr printf 1
command line utility: you supply a
.Xr printf 1
format string on the command line, and each row of the CSV file is split into arguments and formatted accordingly.
The format specifiers in the format string contain numeric or symbolic column accessors to specify which CSV column to format.
.Pp
A numeric column accessor is a sequence of decimal digits followed by the
.Pa $
character (the same accessor format supported by
.Xr printf 1 ) .
So for example,
.Pa \(dq%3$d\(dq
would format the third CSV column as a decimal value.
In addition, the
.Pa \(dq%0$d\(dq
specifier will print the number of columns in the record.
.Pp
When the
.Fl i
flag is given, the first row is assumed to contain column names and is not output.
This allows symbolic, instead of numeric, column accessors to be used.
A symbolic column accessor is the column name enclosed in curly braces.
.Pp
For example, if the first row is
.Pa FirstName,Lastname,IdNum
then the format string
.Pa \(dq%{IdNum}04d: %{LastName}s, %{FirstName}s\(dq
would be equivalent to the format string
.Pa \(dq%3$04d: %2$s, %1$s\(dq .
.Pp
Specifying a column name that does not appear in the first row generates an error,
so the use of symbolic column accessors adds an extra consistency check.
.Pp
.Nm
can also convert CSV files into XML documents.
The
.Nm xml2csv
command converts XML documents generated by
.Nm
back into CSV files.
.Sh INPUT ENCODING
Lines must be terminated by LF bytes or CR+LF byte pairs, and the separator and quote characters must be recognizable as single byte values.
Otherwise, column values are copied from input to output without interpretation.
.Pp
This behavior is compatible with ASCII, ISO-8859-1, UTF-8, etc., but not multi-byte encodings such as UTF-16, which must be re-encoded first.
.Pp
In XML mode, column values must be interpreted according to an assumed character encoding, which is configured by the
.Fl e
flag.
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl e
Specify input character encoding for XML mode.
.Pp
By default, ISO-8859-1 is assumed.
.It Fl f
Read CSV input from the specified file.
.Pp
By default (or if ``-'' is specified),
.Nm
reads from standard input.
.It Fl i
Assume the first CSV record contains column names.
Enable symbolic column accessors and omit that first record from the output.
.It Fl q
Specify an alternate CSV column quote character.
The usual backslash escape sequences are accepted.
The default quote character is double quote.
.It Fl s
Specify an alternate CSV column separator character.
The usual backslash escape sequences are accepted.
The default separator character is comma.
.It Fl h
Output usage message and exit.
.It Fl v
Output version information and exit.
.It Fl x
Convert the CSV input into an XML document.
If the input character encoding is other than ISO-8859-1, specify using the
.Fl e
flag.
.It Fl X
Same as
.Fl x ,
but it also causes the values in the first row to be used as the XML tag names for the corresponding columns.
.Pp
This flag implies
.Fl i .
.El
.Sh CSV FORMAT
.Nm
parses according to the format described by ``The Comma Separated Value (CSV) File Format'' (see below).
In particular, quote characters must be escaped with an extra quote and whitespace surrounding column values is ignored.
.Sh EXIT STATUS
.Nm
will exit with a status 1 if invalid CSV input is detected.
Otherwise, if an invocation of
.Xr printf 1
fails, processing stops and that exit value is returned.
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa @pkgdatadir@/csv.xsl
XSL transform that converts XML back into CSV format.
.El
.Sh BUGS
.Pp
Under the hood,
.Nm
invokes the
.Xr printf 1
executable on each CSV row it parses, which makes it relatively slow.
.Sh SEE ALSO
.Xr printf 1 ,
.Xr printf 3 .
.Rs
.%T "csvprintf: Simple CSV file parser for the UNIX command line"
.%O https://github.com/archiecobbs/csvprintf
.Re
.Rs
.%T "The Comma Separated Value (CSV) File Format"
.%O http://www.creativyst.com/Doc/Articles/CSV/CSV01.htm
.Re
.Sh AUTHOR
.An Archie L. Cobbs Aq archie.cobbs@gmail.com
